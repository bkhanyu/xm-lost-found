{"ast":null,"code":"import E from 'wangeditor';\nexport default {\n  data() {\n    return {\n      editor: null,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      tableData: [],\n      pageNum: 1,\n      pageSize: 5,\n      total: 0,\n      fromVisible: false,\n      viewVisible: false,\n      form: {},\n      viewData: null\n    };\n  },\n  mounted() {\n    this.load(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor');\n        this.editor.config.placeholder = '请输入内容';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n        this.editor.create();\n        setTimeout(() => {\n          this.editor.txt.html(content);\n        });\n      });\n    },\n    viewEditor(content) {\n      this.viewData = content;\n      this.viewVisible = true;\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/found/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    handleAdd() {\n      this.form = {\n        status: '未找到失主'\n      };\n      this.initWangEditor('');\n      this.fromVisible = true;\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.initWangEditor(this.form.content || '');\n      this.fromVisible = true;\n    },\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/found/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    save() {\n      this.form.content = this.editor.txt.html();\n      this.$request({\n        url: this.form.id ? '/found/update' : '/found/add',\n        method: this.form.id ? 'PUT' : 'POST',\n        data: this.form\n      }).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('保存成功');\n          this.fromVisible = false;\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load(this.pageNum);\n    },\n    handleImgSuccess(res) {\n      this.form.img = res.data;\n    }\n  }\n};","map":{"version":3,"names":["E","data","editor","user","JSON","parse","localStorage","getItem","tableData","pageNum","pageSize","total","fromVisible","viewVisible","form","viewData","mounted","load","methods","initWangEditor","content","$nextTick","config","placeholder","uploadFileName","uploadImgServer","create","setTimeout","txt","html","viewEditor","$request","get","params","userId","id","then","res","list","handleAdd","status","handleEdit","row","stringify","del","$confirm","type","response","delete","code","$message","success","error","msg","catch","save","url","method","handleCurrentChange","handleImgSuccess","img"],"sources":["src/views/front/MyFound.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 70%; margin: 0 auto\">\n      <div style=\"margin: 20px 0\">\n        <el-button type=\"primary\" plain @click=\"handleAdd\">发布招领</el-button>\n      </div>\n      <div class=\"table\">\n        <el-table :data=\"tableData\" stripe>\n          <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"img\" label=\"物品主图\">\n            <template v-slot=\"scope\">\n              <div style=\"display: flex; align-items: center\">\n                <el-image style=\"width: 40px; height: 40px\" v-if=\"scope.row.img\"\n                          :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"物品名称\" show-overflow-tooltip></el-table-column>\n          <el-table-column prop=\"content\" label=\"物品描述\">\n            <template v-slot=\"scope\">\n              <el-button type=\"primary\" size=\"mini\" @click=\"viewEditor(scope.row.content)\">点击查看</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"时间\"></el-table-column>\n\n          <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n            <template v-slot=\"scope\">\n              <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n              <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <div class=\"pagination\" style=\"margin-top: 20px\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n\n      <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"55%\" :close-on-click-modal=\"false\" destroy-on-close>\n        <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\">\n          <el-form-item prop=\"img\" label=\"物品图片\">\n            <el-upload\n                class=\"avatar-uploader\"\n                :action=\"$baseUrl + '/files/upload'\"\n                :headers=\"{ token: user.token }\"\n                list-type=\"picture\"\n                :on-success=\"handleImgSuccess\"\n            >\n              <el-button type=\"primary\">上传图片</el-button>\n            </el-upload>\n          </el-form-item>\n          <el-form-item prop=\"name\" label=\"物品名称\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"status\" label=\"物品状态\">\n            <el-select v-model=\"form.status\" placeholder=\"请选择状态\" style=\"width: 100%\">\n              <el-option label=\"未找到失主\" value=\"未找到失主\"></el-option>\n              <el-option label=\"已找到失主\" value=\"已找到失主\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"content\" label=\"物品描述\">\n            <div id=\"editor\"></div>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </div>\n      </el-dialog>\n\n      <el-dialog title=\"详细信息\" :visible.sync=\"viewVisible\" width=\"55%\" :close-on-click-modal=\"false\" destroy-on-close>\n        <div v-html=\"viewData\" class=\"w-e-text w-e-text-container\"></div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\nexport default {\n\n  data() {\n    return {\n      editor: null,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      tableData: [],\n      pageNum: 1,\n      pageSize: 5,\n      total: 0,\n      fromVisible: false,\n      viewVisible: false,\n      form: {},\n      viewData: null,\n    }\n  },\n  mounted() {\n    this.load(1)\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor')\n        this.editor.config.placeholder = '请输入内容'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\n        this.editor.create()\n        setTimeout(() => {\n          this.editor.txt.html(content)\n        })\n      })\n    },\n    viewEditor(content) {\n      this.viewData = content\n      this.viewVisible = true\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/found/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    handleAdd() {\n      this.form = {\n        status: '未找到失主'\n      }\n      this.initWangEditor('')\n      this.fromVisible = true\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.initWangEditor(this.form.content || '')\n      this.fromVisible = true\n    },\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/found/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    save() {\n      this.form.content = this.editor.txt.html()\n      this.$request({\n        url: this.form.id ? '/found/update' : '/found/add',\n        method: this.form.id ? 'PUT' : 'POST',\n        data: this.form\n      }).then(res => {\n        if (res.code === '200') {  // 表示成功保存\n          this.$message.success('保存成功')\n          this.fromVisible = false\n          this.load(1)\n        } else {\n          this.$message.error(res.msg)  // 弹出错误的信息\n        }\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum\n      this.load(this.pageNum)\n    },\n    handleImgSuccess(res) {\n      this.form.img = res.data\n    }\n  }\n}\n</script>\n"],"mappings":"AAuFA,OAAAA,CAAA;AACA;EAEAC,KAAA;IACA;MACAC,MAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,WAAA;MACAC,WAAA;MACAC,IAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACA;EACAC,OAAA;IACAC,eAAAC,OAAA;MACA,KAAAC,SAAA;QACA,KAAAnB,MAAA,OAAAF,CAAA;QACA,KAAAE,MAAA,CAAAoB,MAAA,CAAAC,WAAA;QACA,KAAArB,MAAA,CAAAoB,MAAA,CAAAE,cAAA;QACA,KAAAtB,MAAA,CAAAoB,MAAA,CAAAG,eAAA;QACA,KAAAvB,MAAA,CAAAwB,MAAA;QACAC,UAAA;UACA,KAAAzB,MAAA,CAAA0B,GAAA,CAAAC,IAAA,CAAAT,OAAA;QACA;MACA;IACA;IACAU,WAAAV,OAAA;MACA,KAAAL,QAAA,GAAAK,OAAA;MACA,KAAAP,WAAA;IACA;IACAI,KAAAR,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAsB,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAxB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAwB,MAAA,OAAA/B,IAAA,CAAAgC;QACA;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAApC,IAAA,EAAAqC,IAAA;QACA,KAAA3B,KAAA,GAAA0B,GAAA,CAAApC,IAAA,EAAAU,KAAA;MACA;IACA;IACA4B,UAAA;MACA,KAAAzB,IAAA;QACA0B,MAAA;MACA;MACA,KAAArB,cAAA;MACA,KAAAP,WAAA;IACA;IACA6B,WAAAC,GAAA;MACA,KAAA5B,IAAA,GAAAV,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAuC,SAAA,CAAAD,GAAA;MACA,KAAAvB,cAAA,MAAAL,IAAA,CAAAM,OAAA;MACA,KAAAR,WAAA;IACA;IACAgC,IAAAT,EAAA;MACA,KAAAU,QAAA;QAAAC,IAAA;MAAA,GAAAV,IAAA,CAAAW,QAAA;QACA,KAAAhB,QAAA,CAAAiB,MAAA,oBAAAb,EAAA,EAAAC,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAY,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAlC,IAAA;UACA;YACA,KAAAiC,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;UACA;QACA;MACA,GAAAC,KAAA,QACA;IACA;IACAC,KAAA;MACA,KAAAzC,IAAA,CAAAM,OAAA,QAAAlB,MAAA,CAAA0B,GAAA,CAAAC,IAAA;MACA,KAAAE,QAAA;QACAyB,GAAA,OAAA1C,IAAA,CAAAqB,EAAA;QACAsB,MAAA,OAAA3C,IAAA,CAAAqB,EAAA;QACAlC,IAAA,OAAAa;MACA,GAAAsB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAY,IAAA;UAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAvC,WAAA;UACA,KAAAK,IAAA;QACA;UACA,KAAAiC,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;QACA;MACA;IACA;IACAK,oBAAAjD,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA,KAAAQ,IAAA,MAAAR,OAAA;IACA;IACAkD,iBAAAtB,GAAA;MACA,KAAAvB,IAAA,CAAA8C,GAAA,GAAAvB,GAAA,CAAApC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}